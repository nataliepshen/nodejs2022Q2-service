// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  login     String
  password  String
  version   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Artist {
  id          String     @id @default(uuid()) @db.Uuid
  name        String
  grammy      Boolean
  Album       Album[]
  Track       Track[]
  Favorites   Favorites? @relation(fields: [favoritesId], references: [id])
  favoritesId String?    @db.Uuid

  @@map("artists")
}

model Album {
  id          String     @id @default(uuid()) @db.Uuid
  name        String
  year        Int
  artistId    String?    @db.Uuid
  artist      Artist?    @relation(fields: [artistId], references: [id])
  Track       Track[]
  Favorites   Favorites? @relation(fields: [favoritesId], references: [id])
  favoritesId String?    @db.Uuid

  @@map("albums")
}

model Track {
  id          String     @id @default(uuid()) @db.Uuid
  name        String
  artistId    String?    @db.Uuid
  artist      Artist?    @relation(fields: [artistId], references: [id])
  albumId     String?    @db.Uuid
  album       Album?     @relation(fields: [albumId], references: [id])
  duration    Int
  Favorites   Favorites? @relation(fields: [favoritesId], references: [id])
  favoritesId String?    @db.Uuid

  @@map("tracks")
}

model Favorites {
  id      String   @id @default(uuid()) @db.Uuid
  artists Artist[]
  albums  Album[]
  tracks  Track[]

  @@map("favorites")
}
